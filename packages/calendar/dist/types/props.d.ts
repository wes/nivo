/// <reference types="react" />
import { CalendarLegendProps } from './types';
export declare const calendarDefaultProps: {
    readonly role: "img";
    readonly colors: string[];
    readonly align: "center";
    readonly direction: "horizontal";
    readonly emptyColor: "#fff";
    readonly minValue: 0;
    readonly maxValue: "auto";
    readonly yearSpacing: 30;
    readonly yearLegend: (year: number) => number;
    readonly yearLegendPosition: "before";
    readonly yearLegendOffset: 10;
    readonly monthBorderWidth: 2;
    readonly monthBorderColor: "#000";
    readonly monthSpacing: 0;
    readonly monthLegend: (_year: number, _month: number, date: Date) => string;
    readonly monthLegendPosition: "before";
    readonly monthLegendOffset: 10;
    readonly daySpacing: 0;
    readonly dayBorderWidth: 1;
    readonly dayBorderColor: "#000";
    readonly isInteractive: true;
    readonly legends: CalendarLegendProps[];
    readonly tooltip: import("react").MemoExoticComponent<({ value, day, color }: import("./types").CalendarTooltipProps) => JSX.Element | null>;
};
export declare const calendarCanvasDefaultProps: {
    readonly pixelRatio: number;
    readonly colors: string[];
    readonly align: "center";
    readonly direction: "horizontal";
    readonly emptyColor: "#fff";
    readonly minValue: 0;
    readonly maxValue: "auto";
    readonly yearSpacing: 30;
    readonly yearLegend: (year: number) => number;
    readonly yearLegendPosition: "before";
    readonly yearLegendOffset: 10;
    readonly monthBorderWidth: 2;
    readonly monthBorderColor: "#000";
    readonly monthSpacing: 0;
    readonly monthLegend: (_year: number, _month: number, date: Date) => string;
    readonly monthLegendPosition: "before";
    readonly monthLegendOffset: 10;
    readonly daySpacing: 0;
    readonly dayBorderWidth: 1;
    readonly dayBorderColor: "#000";
    readonly isInteractive: true;
    readonly legends: CalendarLegendProps[];
    readonly tooltip: import("react").MemoExoticComponent<({ value, day, color }: import("./types").CalendarTooltipProps) => JSX.Element | null>;
};
export declare const timeRangeDefaultProps: {
    readonly dayBorderColor: "#fff";
    readonly dayRadius: 0;
    readonly square: true;
    readonly weekdayLegendOffset: 75;
    readonly firstWeekday: "sunday";
    readonly role: "img";
    readonly colors: string[];
    readonly align: "center";
    readonly direction: "horizontal";
    readonly emptyColor: "#fff";
    readonly minValue: 0;
    readonly maxValue: "auto";
    readonly yearSpacing: 30;
    readonly yearLegend: (year: number) => number;
    readonly yearLegendPosition: "before";
    readonly yearLegendOffset: 10;
    readonly monthBorderWidth: 2;
    readonly monthBorderColor: "#000";
    readonly monthSpacing: 0;
    readonly monthLegend: (_year: number, _month: number, date: Date) => string;
    readonly monthLegendPosition: "before";
    readonly monthLegendOffset: 10;
    readonly daySpacing: 0;
    readonly dayBorderWidth: 1;
    readonly isInteractive: true;
    readonly legends: CalendarLegendProps[];
    readonly tooltip: import("react").MemoExoticComponent<({ value, day, color }: import("./types").CalendarTooltipProps) => JSX.Element | null>;
};
//# sourceMappingURL=props.d.ts.map