{"version":3,"file":"nivo-funnel.cjs.js","sources":["../src/props.tsx","../src/PartTooltip.tsx","../src/hooks.ts","../src/Part.tsx","../src/Parts.tsx","../src/PartLabel.tsx","../src/PartLabels.tsx","../src/Separator.tsx","../src/Separators.tsx","../src/FunnelAnnotations.tsx","../src/Funnel.tsx","../src/ResponsiveFunnel.tsx"],"sourcesContent":["// @ts-ignore\nimport { MotionConfigProvider } from '@nivo/core'\nimport { FunnelLayerId } from './types'\n\nexport const svgDefaultProps = {\n    layers: ['separators', 'parts', 'labels', 'annotations'] as FunnelLayerId[],\n\n    direction: 'vertical' as const,\n    interpolation: 'smooth' as const,\n    spacing: 0,\n    shapeBlending: 0.66,\n\n    colors: { scheme: 'nivo' as const },\n    fillOpacity: 1,\n\n    borderWidth: 6,\n    borderColor: { from: 'color' },\n    borderOpacity: 0.66,\n\n    enableLabel: true,\n    labelColor: { theme: 'background' },\n\n    enableBeforeSeparators: true,\n    beforeSeparatorLength: 0,\n    beforeSeparatorOffset: 0,\n    enableAfterSeparators: true,\n    afterSeparatorLength: 0,\n    afterSeparatorOffset: 0,\n\n    annotations: [],\n\n    isInteractive: true,\n    currentPartSizeExtension: 0,\n\n    role: 'img',\n\n    animate: MotionConfigProvider.defaultProps.animate,\n    motionConfig: MotionConfigProvider.defaultProps.config,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { FunnelDatum, FunnelPartWithHandlers } from './types'\n\nexport interface PartTooltipProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n}\n\nexport const PartTooltip = <D extends FunnelDatum>({ part }: PartTooltipProps<D>) => (\n    <BasicTooltip\n        id={part.data.label}\n        value={part.formattedValue}\n        color={part.color}\n        enableChip={true}\n    />\n)\n","import { createElement, useMemo, useState, MouseEvent } from 'react'\nimport { line, area, curveBasis, curveLinear } from 'd3-shape'\nimport { ScaleLinear, scaleLinear } from 'd3-scale'\nimport { useInheritedColor, useOrdinalColorScale } from '@nivo/colors'\nimport { useTheme, useValueFormatter } from '@nivo/core'\nimport { useAnnotations } from '@nivo/annotations'\nimport { useTooltip, TooltipActionsContextData } from '@nivo/tooltip'\nimport { svgDefaultProps as defaults } from './props'\nimport { PartTooltip, PartTooltipProps } from './PartTooltip'\nimport {\n    FunnelDatum,\n    FunnelCommonProps,\n    FunnelDataProps,\n    FunnelPart,\n    SeparatorProps,\n    FunnelCustomLayerProps,\n    FunnelAreaGenerator,\n    FunnelAreaPoint,\n    FunnelBorderGenerator,\n    Position,\n} from './types'\n\nexport const computeShapeGenerators = <D extends FunnelDatum>(\n    interpolation: FunnelCommonProps<D>['interpolation'],\n    direction: FunnelCommonProps<D>['direction']\n): [FunnelAreaGenerator, FunnelBorderGenerator] => {\n    // area generator which is used to draw funnel chart parts\n    const areaGenerator: FunnelAreaGenerator = area<FunnelAreaPoint>()\n    if (direction === 'vertical') {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .x0(d => d.x0)\n            .x1(d => d.x1)\n            .y(d => d.y)\n    } else {\n        areaGenerator\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear)\n            .y0(d => d.y0)\n            .y1(d => d.y1)\n            .x(d => d.x)\n    }\n\n    return [\n        areaGenerator,\n        // we're using a different line generator to draw borders, this way\n        // we we don't have borders joining each side of the parts.\n        // it's important to have an empty point when defining the points\n        // to be used along with this, otherwise we'll get a line between both sides.\n        line<Position | null>()\n            .defined(d => d !== null)\n            .x(d => d!.x)\n            .y(d => d!.y)\n            .curve(interpolation === 'smooth' ? curveBasis : curveLinear),\n    ]\n}\n\ninterface CustomBandScale {\n    (index: number): number\n    bandwidth: number\n}\n\nexport const computeScales = <D extends FunnelDatum>({\n    data,\n    direction,\n    width,\n    height,\n    spacing,\n}: {\n    data: FunnelDataProps<D>['data']\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n}): [CustomBandScale, ScaleLinear<number, number>] => {\n    let bandScaleSize\n    let linearScaleSize\n    if (direction === 'vertical') {\n        bandScaleSize = height\n        linearScaleSize = width\n    } else {\n        bandScaleSize = width\n        linearScaleSize = height\n    }\n\n    const bandwidth = (bandScaleSize - spacing * (data.length - 1)) / data.length\n\n    // we're not using d3 band scale here to be able to get\n    // the actual paddingInner value in pixels, required to\n    // create centered separator lines between parts\n    const bandScale = (index: number) => spacing * index + bandwidth * index\n    bandScale.bandwidth = bandwidth\n\n    const allValues = data.map(d => d.value)\n\n    const linearScale = scaleLinear()\n        .domain([0, Math.max(...allValues)])\n        .range([0, linearScaleSize])\n\n    return [bandScale, linearScale]\n}\n\nexport const computeSeparators = <D extends FunnelDatum>({\n    parts,\n    direction,\n    width,\n    height,\n    spacing,\n    enableBeforeSeparators,\n    beforeSeparatorOffset,\n    enableAfterSeparators,\n    afterSeparatorOffset,\n}: {\n    parts: FunnelPart<D>[]\n    direction: FunnelCommonProps<D>['direction']\n    width: number\n    height: number\n    spacing: number\n    enableBeforeSeparators: boolean\n    beforeSeparatorOffset: number\n    enableAfterSeparators: boolean\n    afterSeparatorOffset: number\n}) => {\n    const beforeSeparators: SeparatorProps[] = []\n    const afterSeparators: SeparatorProps[] = []\n    const lastPart = parts[parts.length - 1]\n\n    if (direction === 'vertical') {\n        parts.forEach(part => {\n            const y = part.y0 - spacing / 2\n\n            if (enableBeforeSeparators) {\n                beforeSeparators.push({\n                    partId: part.data.id,\n                    x0: 0,\n                    x1: part.x0 - beforeSeparatorOffset,\n                    y0: y,\n                    y1: y,\n                })\n            }\n            if (enableAfterSeparators) {\n                afterSeparators.push({\n                    partId: part.data.id,\n                    x0: part.x1 + afterSeparatorOffset,\n                    x1: width,\n                    y0: y,\n                    y1: y,\n                })\n            }\n        })\n\n        const y = lastPart.y1\n        if (enableBeforeSeparators) {\n            beforeSeparators.push({\n                ...beforeSeparators[beforeSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n        if (enableAfterSeparators) {\n            afterSeparators.push({\n                ...afterSeparators[afterSeparators.length - 1],\n                partId: 'none',\n                y0: y,\n                y1: y,\n            })\n        }\n    } else if (direction === 'horizontal') {\n        parts.forEach(part => {\n            const x = part.x0 - spacing / 2\n\n            beforeSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: 0,\n                y1: part.y0 - beforeSeparatorOffset,\n            })\n            afterSeparators.push({\n                partId: part.data.id,\n                x0: x,\n                x1: x,\n                y0: part.y1 + afterSeparatorOffset,\n                y1: height,\n            })\n        })\n\n        const x = lastPart.x1\n        beforeSeparators.push({\n            ...beforeSeparators[beforeSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n        afterSeparators.push({\n            ...afterSeparators[afterSeparators.length - 1],\n            partId: 'none',\n            x0: x,\n            x1: x,\n        })\n    }\n\n    return [beforeSeparators, afterSeparators]\n}\n\nexport const computePartsHandlers = <D extends FunnelDatum>({\n    parts,\n    setCurrentPartId,\n    isInteractive,\n    onMouseEnter,\n    onMouseLeave,\n    onMouseMove,\n    onClick,\n    showTooltipFromEvent,\n    hideTooltip,\n    tooltip = PartTooltip,\n}: {\n    parts: FunnelPart<D>[]\n    setCurrentPartId: (id: string | number | null) => void\n    isInteractive: FunnelCommonProps<D>['isInteractive']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onClick?: FunnelCommonProps<D>['onClick']\n    showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent']\n    hideTooltip: () => void\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    if (!isInteractive) return parts\n\n    return parts.map(part => {\n        const boundOnMouseEnter = (event: MouseEvent) => {\n            setCurrentPartId(part.data.id)\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseEnter !== undefined && onMouseEnter(part, event)\n        }\n\n        const boundOnMouseLeave = (event: MouseEvent) => {\n            setCurrentPartId(null)\n            hideTooltip()\n            onMouseLeave !== undefined && onMouseLeave(part, event)\n        }\n\n        const boundOnMouseMove = (event: MouseEvent) => {\n            showTooltipFromEvent(createElement(tooltip, { part }), event)\n            onMouseMove !== undefined && onMouseMove(part, event)\n        }\n\n        const boundOnClick =\n            onClick !== undefined\n                ? (event: MouseEvent) => {\n                      onClick(part, event)\n                  }\n                : undefined\n\n        return {\n            ...part,\n            onMouseEnter: boundOnMouseEnter,\n            onMouseLeave: boundOnMouseLeave,\n            onMouseMove: boundOnMouseMove,\n            onClick: boundOnClick,\n        }\n    })\n}\n\n/**\n * Creates required layout to generate a funnel chart,\n * it uses almost the same parameters as the Funnel component.\n *\n * For purpose/constrains on the parameters, please have a look\n * at the component's props.\n */\nexport const useFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    direction = defaults.direction,\n    interpolation = defaults.interpolation,\n    spacing = defaults.spacing,\n    shapeBlending: rawShapeBlending = defaults.shapeBlending,\n    valueFormat,\n    colors = defaults.colors,\n    fillOpacity = defaults.fillOpacity,\n    borderWidth = defaults.borderWidth,\n    borderColor = defaults.borderColor,\n    borderOpacity = defaults.borderOpacity,\n    labelColor = defaults.labelColor,\n    enableBeforeSeparators = defaults.enableBeforeSeparators,\n    beforeSeparatorLength = defaults.beforeSeparatorLength,\n    beforeSeparatorOffset = defaults.beforeSeparatorOffset,\n    enableAfterSeparators = defaults.enableAfterSeparators,\n    afterSeparatorLength = defaults.afterSeparatorLength,\n    afterSeparatorOffset = defaults.afterSeparatorOffset,\n    isInteractive = defaults.isInteractive,\n    currentPartSizeExtension = defaults.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n}: {\n    data: FunnelDataProps<D>['data']\n    width: number\n    height: number\n    direction?: FunnelCommonProps<D>['direction']\n    interpolation?: FunnelCommonProps<D>['interpolation']\n    spacing?: FunnelCommonProps<D>['spacing']\n    shapeBlending?: FunnelCommonProps<D>['shapeBlending']\n    valueFormat?: FunnelCommonProps<D>['valueFormat']\n    colors?: FunnelCommonProps<D>['colors']\n    fillOpacity?: FunnelCommonProps<D>['fillOpacity']\n    borderWidth?: FunnelCommonProps<D>['borderWidth']\n    borderColor?: FunnelCommonProps<D>['borderColor']\n    borderOpacity?: FunnelCommonProps<D>['borderOpacity']\n    labelColor?: FunnelCommonProps<D>['labelColor']\n    enableBeforeSeparators?: FunnelCommonProps<D>['enableBeforeSeparators']\n    beforeSeparatorLength?: FunnelCommonProps<D>['beforeSeparatorLength']\n    beforeSeparatorOffset?: FunnelCommonProps<D>['beforeSeparatorOffset']\n    enableAfterSeparators?: FunnelCommonProps<D>['enableAfterSeparators']\n    afterSeparatorLength?: FunnelCommonProps<D>['afterSeparatorLength']\n    afterSeparatorOffset?: FunnelCommonProps<D>['afterSeparatorOffset']\n    isInteractive?: FunnelCommonProps<D>['isInteractive']\n    currentPartSizeExtension?: FunnelCommonProps<D>['currentPartSizeExtension']\n    currentBorderWidth?: FunnelCommonProps<D>['currentBorderWidth']\n    onMouseEnter?: FunnelCommonProps<D>['onMouseEnter']\n    onMouseMove?: FunnelCommonProps<D>['onMouseMove']\n    onMouseLeave?: FunnelCommonProps<D>['onMouseLeave']\n    onClick?: FunnelCommonProps<D>['onClick']\n    tooltip?: (props: PartTooltipProps<D>) => JSX.Element\n}) => {\n    const theme = useTheme()\n    const getColor = useOrdinalColorScale<D>(colors, 'id')\n    const getBorderColor = useInheritedColor(borderColor, theme)\n    const getLabelColor = useInheritedColor(labelColor, theme)\n\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const [areaGenerator, borderGenerator] = useMemo(\n        () => computeShapeGenerators<D>(interpolation, direction),\n        [interpolation, direction]\n    )\n\n    let innerWidth: number\n    let innerHeight: number\n    const paddingBefore = enableBeforeSeparators ? beforeSeparatorLength + beforeSeparatorOffset : 0\n    const paddingAfter = enableAfterSeparators ? afterSeparatorLength + afterSeparatorOffset : 0\n    if (direction === 'vertical') {\n        innerWidth = width - paddingBefore - paddingAfter\n        innerHeight = height\n    } else {\n        innerWidth = width\n        innerHeight = height - paddingBefore - paddingAfter\n    }\n\n    const [bandScale, linearScale] = useMemo(\n        () =>\n            computeScales<D>({\n                data,\n                direction,\n                width: innerWidth,\n                height: innerHeight,\n                spacing,\n            }),\n        [data, direction, innerWidth, innerHeight, spacing]\n    )\n\n    const [currentPartId, setCurrentPartId] = useState<string | number | null>(null)\n\n    const parts: FunnelPart<D>[] = useMemo(() => {\n        const enhancedParts = data.map((datum, index) => {\n            const isCurrent = datum.id === currentPartId\n\n            let partWidth\n            let partHeight\n            let y0, x0\n\n            if (direction === 'vertical') {\n                partWidth = linearScale(datum.value)\n                partHeight = bandScale.bandwidth\n                x0 = paddingBefore + (innerWidth - partWidth) * 0.5\n                y0 = bandScale(index)\n            } else {\n                partWidth = bandScale.bandwidth\n                partHeight = linearScale(datum.value)\n                x0 = bandScale(index)\n                y0 = paddingBefore + (innerHeight - partHeight) * 0.5\n            }\n\n            const x1 = x0 + partWidth\n            const x = x0 + partWidth * 0.5\n            const y1 = y0 + partHeight\n            const y = y0 + partHeight * 0.5\n\n            const part: FunnelPart<D> = {\n                data: datum,\n                width: partWidth,\n                height: partHeight,\n                color: getColor(datum),\n                fillOpacity,\n                borderWidth:\n                    isCurrent && currentBorderWidth !== undefined\n                        ? currentBorderWidth\n                        : borderWidth,\n                borderOpacity,\n                formattedValue: formatValue(datum.value),\n                isCurrent,\n                x,\n                x0,\n                x1,\n                y,\n                y0,\n                y1,\n                borderColor: '',\n                labelColor: '',\n                points: [],\n                areaPoints: [],\n                borderPoints: [],\n            }\n\n            part.borderColor = getBorderColor(part)\n            part.labelColor = getLabelColor(part)\n\n            return part\n        })\n\n        const shapeBlending = rawShapeBlending / 2\n\n        enhancedParts.forEach((part, index) => {\n            const nextPart = enhancedParts[index + 1]\n\n            if (direction === 'vertical') {\n                part.points.push({ x: part.x0, y: part.y0 })\n                part.points.push({ x: part.x1, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: nextPart.x1, y: part.y1 })\n                    part.points.push({ x: nextPart.x0, y: part.y1 })\n                } else {\n                    part.points.push({ x: part.points[1].x, y: part.y1 })\n                    part.points.push({ x: part.points[0].x, y: part.y1 })\n                }\n                if (part.isCurrent) {\n                    part.points[0].x -= currentPartSizeExtension\n                    part.points[1].x += currentPartSizeExtension\n                    part.points[2].x += currentPartSizeExtension\n                    part.points[3].x -= currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: 0,\n                        x0: part.points[0].x,\n                        x1: part.points[1].x,\n                        y: part.y0,\n                        y0: 0,\n                        y1: 0,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    y: part.y0 + part.height * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: 0,\n                    x0: part.points[3].x,\n                    x1: part.points[2].x,\n                    y: part.y1,\n                    y0: 0,\n                    y1: 0,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    y: part.y1 - part.height * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x0,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x1,\n                        y: part.areaPoints[index].y,\n                    })\n                })\n            } else {\n                part.points.push({ x: part.x0, y: part.y0 })\n                if (nextPart) {\n                    part.points.push({ x: part.x1, y: nextPart.y0 })\n                    part.points.push({ x: part.x1, y: nextPart.y1 })\n                } else {\n                    part.points.push({ x: part.x1, y: part.y0 })\n                    part.points.push({ x: part.x1, y: part.y1 })\n                }\n                part.points.push({ x: part.x0, y: part.y1 })\n                if (part.isCurrent) {\n                    part.points[0].y -= currentPartSizeExtension\n                    part.points[1].y -= currentPartSizeExtension\n                    part.points[2].y += currentPartSizeExtension\n                    part.points[3].y += currentPartSizeExtension\n                }\n\n                part.areaPoints = [\n                    {\n                        x: part.x0,\n                        x0: 0,\n                        x1: 0,\n                        y: 0,\n                        y0: part.points[0].y,\n                        y1: part.points[3].y,\n                    },\n                ]\n                part.areaPoints.push({\n                    ...part.areaPoints[0],\n                    x: part.x0 + part.width * shapeBlending,\n                })\n                const lastAreaPoint = {\n                    x: part.x1,\n                    x0: 0,\n                    x1: 0,\n                    y: 0,\n                    y0: part.points[1].y,\n                    y1: part.points[2].y,\n                }\n                part.areaPoints.push({\n                    ...lastAreaPoint,\n                    x: part.x1 - part.width * shapeBlending,\n                })\n                part.areaPoints.push(lastAreaPoint)\n                ;[0, 1, 2, 3].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y0,\n                    })\n                })\n                part.borderPoints.push(null)\n                ;[3, 2, 1, 0].map(index => {\n                    part.borderPoints.push({\n                        x: part.areaPoints[index].x,\n                        y: part.areaPoints[index].y1,\n                    })\n                })\n            }\n        })\n\n        return enhancedParts\n    }, [\n        data,\n        direction,\n        linearScale,\n        bandScale,\n        innerWidth,\n        innerHeight,\n        paddingBefore,\n        paddingAfter,\n        rawShapeBlending,\n        getColor,\n        formatValue,\n        getBorderColor,\n        getLabelColor,\n        currentPartId,\n    ])\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n    const partsWithHandlers = useMemo(\n        () =>\n            computePartsHandlers<D>({\n                parts,\n                setCurrentPartId,\n                isInteractive,\n                onMouseEnter,\n                onMouseLeave,\n                onMouseMove,\n                onClick,\n                showTooltipFromEvent,\n                hideTooltip,\n                tooltip,\n            }),\n        [\n            parts,\n            setCurrentPartId,\n            isInteractive,\n            onMouseEnter,\n            onMouseLeave,\n            onMouseMove,\n            onClick,\n            showTooltipFromEvent,\n            hideTooltip,\n            tooltip,\n        ]\n    )\n\n    const [beforeSeparators, afterSeparators] = useMemo(\n        () =>\n            computeSeparators({\n                parts,\n                direction,\n                width,\n                height,\n                spacing,\n                enableBeforeSeparators,\n                beforeSeparatorOffset,\n                enableAfterSeparators,\n                afterSeparatorOffset,\n            }),\n        [\n            parts,\n            direction,\n            width,\n            height,\n            spacing,\n            enableBeforeSeparators,\n            beforeSeparatorOffset,\n            enableAfterSeparators,\n            afterSeparatorOffset,\n        ]\n    )\n\n    const customLayerProps: FunnelCustomLayerProps<D> = useMemo(\n        () => ({\n            width,\n            height,\n            parts: partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        }),\n        [\n            width,\n            height,\n            partsWithHandlers,\n            areaGenerator,\n            borderGenerator,\n            beforeSeparators,\n            afterSeparators,\n            setCurrentPartId,\n        ]\n    )\n\n    return {\n        parts: partsWithHandlers,\n        areaGenerator,\n        borderGenerator,\n        beforeSeparators,\n        afterSeparators,\n        setCurrentPartId,\n        currentPartId,\n        customLayerProps,\n    }\n}\n\nexport const useFunnelAnnotations = <D extends FunnelDatum>(\n    parts: FunnelPart<D>[],\n    annotations: FunnelCommonProps<D>['annotations']\n) =>\n    useAnnotations<FunnelPart<D>>({\n        data: parts,\n        annotations,\n        getPosition: part => ({\n            x: part.x,\n            y: part.y,\n        }),\n        getDimensions: (part: FunnelPart<D>) => {\n            const width = part.width\n            const height = part.height\n\n            return { size: Math.max(width, height), width, height }\n        },\n    })\n","import { useSpring, animated } from '@react-spring/web'\nimport { useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport {\n    FunnelDatum,\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n} from './types'\n\nexport interface PartProps<D extends FunnelDatum> {\n    part: FunnelPartWithHandlers<D>\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Part = <D extends FunnelDatum>({\n    part,\n    areaGenerator,\n    borderGenerator,\n}: PartProps<D>) => {\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedAreaPath = useAnimatedPath(areaGenerator(part.areaPoints) as string)\n    const animatedBorderPath = useAnimatedPath(borderGenerator(part.borderPoints) as string)\n    const animatedProps = useSpring({\n        areaColor: part.color,\n        borderWidth: part.borderWidth,\n        borderColor: part.borderColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <>\n            {part.borderWidth > 0 && (\n                <animated.path\n                    d={animatedBorderPath}\n                    stroke={animatedProps.borderColor}\n                    strokeWidth={animatedProps.borderWidth}\n                    strokeOpacity={part.borderOpacity}\n                    fill=\"none\"\n                />\n            )}\n            <animated.path\n                d={animatedAreaPath}\n                fill={animatedProps.areaColor}\n                fillOpacity={part.fillOpacity}\n                onMouseEnter={part.onMouseEnter}\n                onMouseLeave={part.onMouseLeave}\n                onMouseMove={part.onMouseMove}\n                onClick={part.onClick}\n            />\n        </>\n    )\n}\n","import { Part } from './Part'\nimport {\n    FunnelPartWithHandlers,\n    FunnelAreaGenerator,\n    FunnelBorderGenerator,\n    FunnelDatum,\n} from './types'\n\ninterface PartsProps<D extends FunnelDatum> {\n    parts: FunnelPartWithHandlers<D>[]\n    areaGenerator: FunnelAreaGenerator\n    borderGenerator: FunnelBorderGenerator\n}\n\nexport const Parts = <D extends FunnelDatum>({\n    parts,\n    areaGenerator,\n    borderGenerator,\n}: PartsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <Part<D>\n                key={part.data.id}\n                part={part}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelProps<D extends FunnelDatum> {\n    part: FunnelPart<D>\n}\n\nexport const PartLabel = <D extends FunnelDatum>({ part }: PartLabelProps<D>) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        transform: `translate(${part.x}, ${part.y})`,\n        color: part.labelColor,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.g transform={animatedProps.transform}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {part.formattedValue}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { PartLabel } from './PartLabel'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface PartLabelsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n}\n\nexport const PartLabels = <D extends FunnelDatum>({ parts }: PartLabelsProps<D>) => (\n    <>\n        {parts.map(part => (\n            <PartLabel key={part.data.id} part={part} />\n        ))}\n    </>\n)\n","import { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorProps {\n    separator: SeparatorType\n}\n\nexport const Separator = ({ separator }: SeparatorProps) => {\n    const theme = useTheme()\n    const { animate, config: motionConfig } = useMotionConfig()\n\n    const animatedProps = useSpring({\n        x1: separator.x0,\n        x2: separator.x1,\n        y1: separator.y0,\n        y2: separator.y1,\n        config: motionConfig,\n        immediate: !animate,\n    })\n\n    return (\n        <animated.line\n            x1={animatedProps.x1}\n            x2={animatedProps.x2}\n            y1={animatedProps.y1}\n            y2={animatedProps.y2}\n            fill=\"none\"\n            {...(theme.grid.line as any)}\n        />\n    )\n}\n","import { Separator } from './Separator'\nimport { SeparatorProps as SeparatorType } from './types'\n\ninterface SeparatorsProps {\n    beforeSeparators: SeparatorType[]\n    afterSeparators: SeparatorType[]\n}\n\nexport const Separators = ({ beforeSeparators, afterSeparators }: SeparatorsProps) => (\n    <>\n        {beforeSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n        {afterSeparators.map(separator => (\n            <Separator key={separator.partId} separator={separator} />\n        ))}\n    </>\n)\n","import { Annotation } from '@nivo/annotations'\nimport { useFunnelAnnotations } from './hooks'\nimport { FunnelDatum, FunnelPart } from './types'\n\ninterface FunnelAnnotationsProps<D extends FunnelDatum> {\n    parts: FunnelPart<D>[]\n    annotations: any[]\n}\n\nexport const FunnelAnnotations = <D extends FunnelDatum>({\n    parts,\n    annotations,\n}: FunnelAnnotationsProps<D>) => {\n    const boundAnnotations = useFunnelAnnotations<D>(parts, annotations)\n\n    return (\n        <>\n            {boundAnnotations.map((annotation, i) => (\n                <Annotation key={i} {...annotation} />\n            ))}\n        </>\n    )\n}\n","import { createElement, Fragment, ReactNode } from 'react'\nimport { SvgWrapper, Container, useDimensions } from '@nivo/core'\nimport { svgDefaultProps } from './props'\nimport { useFunnel } from './hooks'\nimport { Parts } from './Parts'\nimport { PartLabels } from './PartLabels'\nimport { Separators } from './Separators'\nimport { FunnelAnnotations } from './FunnelAnnotations'\nimport { FunnelDatum, FunnelLayerId, FunnelSvgProps } from './types'\n\ntype InnerFunnelProps<D extends FunnelDatum> = Omit<\n    FunnelSvgProps<D>,\n    'animate' | 'motionConfig' | 'renderWrapper' | 'theme'\n>\n\nconst InnerFunnel = <D extends FunnelDatum>({\n    data,\n    width,\n    height,\n    margin: partialMargin,\n    direction = svgDefaultProps.direction,\n    interpolation = svgDefaultProps.interpolation,\n    spacing = svgDefaultProps.spacing,\n    shapeBlending = svgDefaultProps.shapeBlending,\n    valueFormat,\n    colors = svgDefaultProps.colors,\n    fillOpacity = svgDefaultProps.fillOpacity,\n    borderWidth = svgDefaultProps.borderWidth,\n    borderColor = svgDefaultProps.borderColor,\n    borderOpacity = svgDefaultProps.borderOpacity,\n    enableLabel = svgDefaultProps.enableLabel,\n    labelColor = svgDefaultProps.labelColor,\n    enableBeforeSeparators = svgDefaultProps.enableBeforeSeparators,\n    beforeSeparatorLength = svgDefaultProps.beforeSeparatorLength,\n    beforeSeparatorOffset = svgDefaultProps.beforeSeparatorOffset,\n    enableAfterSeparators = svgDefaultProps.enableAfterSeparators,\n    afterSeparatorLength = svgDefaultProps.afterSeparatorLength,\n    afterSeparatorOffset = svgDefaultProps.afterSeparatorOffset,\n    layers = svgDefaultProps.layers,\n    annotations = svgDefaultProps.annotations,\n    isInteractive = svgDefaultProps.isInteractive,\n    currentPartSizeExtension = svgDefaultProps.currentPartSizeExtension,\n    currentBorderWidth,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    onClick,\n    tooltip,\n    role = svgDefaultProps.role,\n    ariaLabel,\n    ariaLabelledBy,\n    ariaDescribedBy,\n}: InnerFunnelProps<D>) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        areaGenerator,\n        borderGenerator,\n        parts,\n        beforeSeparators,\n        afterSeparators,\n        customLayerProps,\n    } = useFunnel<D>({\n        data,\n        width: innerWidth,\n        height: innerHeight,\n        direction,\n        interpolation,\n        spacing,\n        shapeBlending,\n        valueFormat,\n        colors,\n        fillOpacity,\n        borderWidth,\n        borderColor,\n        borderOpacity,\n        labelColor,\n        enableBeforeSeparators,\n        beforeSeparatorLength,\n        beforeSeparatorOffset,\n        enableAfterSeparators,\n        afterSeparatorLength,\n        afterSeparatorOffset,\n        isInteractive,\n        currentPartSizeExtension,\n        currentBorderWidth,\n        onMouseEnter,\n        onMouseMove,\n        onMouseLeave,\n        onClick,\n        tooltip,\n    })\n\n    const layerById: Record<FunnelLayerId, ReactNode> = {\n        separators: null,\n        parts: null,\n        annotations: null,\n        labels: null,\n    }\n\n    if (layers.includes('separators')) {\n        layerById.separators = (\n            <Separators\n                key=\"separators\"\n                beforeSeparators={beforeSeparators}\n                afterSeparators={afterSeparators}\n            />\n        )\n    }\n\n    if (layers.includes('parts')) {\n        layerById.parts = (\n            <Parts<D>\n                key=\"parts\"\n                parts={parts}\n                areaGenerator={areaGenerator}\n                borderGenerator={borderGenerator}\n            />\n        )\n    }\n\n    if (layers?.includes('annotations')) {\n        layerById.annotations = (\n            <FunnelAnnotations<D> key=\"annotations\" parts={parts} annotations={annotations} />\n        )\n    }\n\n    if (layers.includes('labels') && enableLabel) {\n        layerById.labels = <PartLabels<D> key=\"labels\" parts={parts} />\n    }\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            role={role}\n            ariaLabel={ariaLabel}\n            ariaLabelledBy={ariaLabelledBy}\n            ariaDescribedBy={ariaDescribedBy}\n        >\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, customLayerProps)}</Fragment>\n                }\n\n                return layerById?.[layer] ?? null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Funnel = <D extends FunnelDatum = FunnelDatum>({\n    isInteractive = svgDefaultProps.isInteractive,\n    animate = svgDefaultProps.animate,\n    motionConfig = svgDefaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: FunnelSvgProps<D>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerFunnel<D> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { FunnelDatum, FunnelSvgProps } from './types'\nimport { Funnel } from './Funnel'\n\nexport const ResponsiveFunnel = <D extends FunnelDatum = FunnelDatum>(\n    props: Omit<FunnelSvgProps<D>, 'height' | 'width'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Funnel<D> width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n"],"names":["svgDefaultProps","layers","direction","interpolation","spacing","shapeBlending","colors","scheme","fillOpacity","borderWidth","borderColor","from","borderOpacity","enableLabel","labelColor","theme","enableBeforeSeparators","beforeSeparatorLength","beforeSeparatorOffset","enableAfterSeparators","afterSeparatorLength","afterSeparatorOffset","annotations","isInteractive","currentPartSizeExtension","role","animate","MotionConfigProvider","defaultProps","motionConfig","config","PartTooltip","_ref","part","_jsx","BasicTooltip","id","data","label","value","formattedValue","color","enableChip","computeShapeGenerators","areaGenerator","area","curve","curveBasis","curveLinear","x0","d","x1","y","y0","y1","x","line","defined","computeScales","bandScaleSize","linearScaleSize","width","height","bandwidth","length","bandScale","index","allValues","map","scaleLinear","domain","Math","max","apply","range","computeSeparators","_ref2","parts","beforeSeparators","afterSeparators","lastPart","forEach","push","partId","_extends","computePartsHandlers","_ref3","setCurrentPartId","onMouseEnter","onMouseLeave","onMouseMove","onClick","showTooltipFromEvent","hideTooltip","_ref3$tooltip","tooltip","event","createElement","undefined","useFunnel","_ref4","innerWidth","innerHeight","_ref4$direction","defaults","_ref4$interpolation","_ref4$spacing","_ref4$shapeBlending","rawShapeBlending","valueFormat","_ref4$colors","_ref4$fillOpacity","_ref4$borderWidth","_ref4$borderColor","_ref4$borderOpacity","_ref4$labelColor","_ref4$enableBeforeSep","_ref4$beforeSeparator","_ref4$beforeSeparator2","_ref4$enableAfterSepa","_ref4$afterSeparatorL","_ref4$afterSeparatorO","_ref4$isInteractive","_ref4$currentPartSize","currentBorderWidth","useTheme","getColor","useOrdinalColorScale","getBorderColor","useInheritedColor","getLabelColor","formatValue","useValueFormatter","_useMemo","useMemo","borderGenerator","paddingBefore","paddingAfter","_useMemo2","linearScale","_useState","useState","currentPartId","enhancedParts","datum","partWidth","partHeight","isCurrent","points","areaPoints","borderPoints","nextPart","lastAreaPoint","_useTooltip","useTooltip","partsWithHandlers","_useMemo3","customLayerProps","useFunnelAnnotations","useAnnotations","getPosition","getDimensions","size","Part","_useMotionConfig","useMotionConfig","animatedAreaPath","useAnimatedPath","animatedBorderPath","animatedProps","useSpring","areaColor","immediate","_jsxs","_Fragment","children","jsx","animated","path","stroke","strokeWidth","strokeOpacity","fill","Parts","PartLabel","transform","g","text","textAnchor","dominantBaseline","style","labels","pointerEvents","PartLabels","Separator","separator","x2","y2","grid","Separators","FunnelAnnotations","boundAnnotations","annotation","i","Annotation","InnerFunnel","partialMargin","margin","_ref$direction","_ref$interpolation","_ref$spacing","_ref$shapeBlending","_ref$colors","_ref$fillOpacity","_ref$borderWidth","_ref$borderColor","_ref$borderOpacity","_ref$enableLabel","_ref$labelColor","_ref$enableBeforeSepa","_ref$beforeSeparatorL","_ref$beforeSeparatorO","_ref$enableAfterSepar","_ref$afterSeparatorLe","_ref$afterSeparatorOf","_ref$layers","_ref$annotations","_ref$isInteractive","_ref$currentPartSizeE","_ref$role","ariaLabel","ariaLabelledBy","ariaDescribedBy","_useDimensions","useDimensions","outerWidth","outerHeight","_useFunnel","layerById","separators","includes","SvgWrapper","layer","_layerById$layer","Fragment","Funnel","_ref2$isInteractive","_ref2$animate","_ref2$motionConfig","renderWrapper","otherProps","_objectWithoutPropertiesLoose","_excluded","Container","props","ResponsiveWrapper"],"mappings":"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"}